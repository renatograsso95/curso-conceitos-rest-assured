/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package qaops.api.teste;

import org.apache.http.HttpStatus;
import org.junit.Test;
import qaops.api.dominio.Usuario;

import static io.restassured.RestAssured.given;
import static org.hamcrest.CoreMatchers.*;
import static org.hamcrest.MatcherAssert.assertThat;

public class TestUsuario extends TestBase {

    private static final String LISTA_USUARIOS_ENDPOINT = "/users";
    private static final String CRIAR_USUARIOS_ENDPOINT = "/user";
    private static final String MOSTRAR_USUARIOS_ENDPOINT = "/users/{userId}";


    @Test
    public void testeMostraPaginaEspecifica() {
        given()
                .params("page", "2").
                when(). //Quando
                get(LISTA_USUARIOS_ENDPOINT). //endpoint
                then(). //o que espero
                statusCode(HttpStatus.SC_OK) //Verbo HTTP 200
                .body("page", is(2))
                .body("data", is(notNullValue()));
    }

    @Test
    public void testeCriaUsuarioComSucesso() {
        Usuario usuario = new Usuario("renato", "qa-analyst", "email@gmail.com", "email@gmail.com");
        given()
                .body(usuario).
                when() //Depois do when devemos inserir qual verbo será destacado
                .post(CRIAR_USUARIOS_ENDPOINT).
                then() //Then é o resultado a ser exibido, validação
                .statusCode(HttpStatus.SC_CREATED).
                body("name", is("renato"));
    }

    @Test
    public void testeTamanhoDosItemsMostradosIgalAoPerPage() {
        int paginaEsperada = 2;

       int perPageEsperado = retornaPerPageEsperado(paginaEsperada);

        given()
                .params("page", paginaEsperada).
                when(). //Quando
                  get(LISTA_USUARIOS_ENDPOINT). //endpoint
                then(). //o que espero
                statusCode(HttpStatus.SC_OK) //Verbo HTTP 200
                .body(
                        "page", is(paginaEsperada),
                        "data.size()", is(perPageEsperado),
                        "data.findAll {it.avatar.startsWith('https://reqres.in/img/faces') }.size()", is(perPageEsperado) //Groovy Collection
                );

    }

    @Test
    public void testMostraUsuarioEspecifico(){
                Usuario usuario =  given().
                pathParam("userId", "2")
                .when()
                    .get(MOSTRAR_USUARIOS_ENDPOINT)
                        .then()
                   .statusCode(HttpStatus.SC_OK)
                        .extract()
                        .body().jsonPath().getObject("data", Usuario.class);
                            assertThat(usuario.getEmail(), containsString("@reqres.in"));
                             assertThat(usuario.getName(), containsString("Janet"));
                              assertThat(usuario.getLastName(), containsString("Weaver"));


    }

    private int retornaPerPageEsperado(int page) {
      return given().
                params("page", page).
                when()
                    .get(LISTA_USUARIOS_ENDPOINT).
                        then().
                            statusCode(HttpStatus.SC_OK).
                        extract().
                            path("per_page");
    }
}
